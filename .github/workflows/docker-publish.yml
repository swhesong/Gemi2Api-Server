# .github/workflows/docker-publish.yml (最终集成版)

name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      # 步骤 1: 检出您的代码库
      - name: Checkout repository
        uses: actions/checkout@v4

      # =================================================================
      # ▼▼▼ 新增的自动化步骤 ▼▼▼
      # 在构建 Docker 镜像之前，先动态生成最新的 requirements.txt
      # =================================================================
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv (for dependency resolution)
        run: pip install uv
      
      - name: Generate requirements.txt from pyproject.toml
        run: uv pip compile pyproject.toml -o requirements.txt
        
      # =================================================================
      # ▲▲▲ 新增步骤结束 ▲▲▲
      # 后续步骤保持不变，它们将使用上面刚刚生成的 requirements.txt 文件
      # =================================================================

      # 步骤 2: 设置 QEMU (用于多平台构建)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 步骤 3: 设置 Docker Buildx (构建工具)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤 4: 登录到 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤 5: 构建并推送 Docker 镜像
      # 这一步会读取您项目中的 Dockerfile，并使用在前面步骤中
      # 刚刚动态生成的 requirements.txt 来完成构建。
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            devinglaw/genmini2api:latest
            devinglaw/genmini2api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
